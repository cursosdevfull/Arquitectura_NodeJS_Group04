version: '3.8'

services:
  arq04-mysql-server:
    image: mysql:8
    container_name: arq04-mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: db
      MYSQL_USER: shidalgo
      MYSQL_PASSWORD: 12345
    restart: unless-stopped
    ports:
      - 3310:3306
    networks:
      - net-app
    volumes:
      - vol-app:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 10s
      retries: 3
      start_interval: 5s

  arq04-mysql-client:
    image: phpmyadmin
    container_name: arq04-mysql-client
    environment:
      PMA_ARBITRARY: 1
    restart: unless-stopped
    ports:
      - 8082:80
    networks:
      - net-app
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost']
      interval: 10s
      timeout: 10s
      retries: 3
      start_interval: 5s
    depends_on:
      arq04-mysql-server:
        condition: service_healthy

  arq04-mongo-server:
    image: mongo:4
    container_name: arq04-mongo-server
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: db
    volumes:
      - vol-app-mongo:/data/db
    networks:
      - net-app
    healthcheck:
      test:
        [
          'CMD',
          'mongo',
          '--quiet',
          '127.0.0.1/test',
          '--eval',
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s

  arq04-mongo-client:
    image: mongo-express:1.0.0-18-alpine3.18
    container_name: arq04-mongo-client
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 12345
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: 12345
      ME_CONFIG_MONGODB_SERVER: mongo-server
      ME_CONFIG_MONGODB_PORT: 27017
    #healthcheck:
    #  test: ['CMD', 'curl', '-f', 'http://localhost:8081']
    #  interval: 10s
    #  timeout: 10s
    #  retries: 3
    #  start_interval: 5s
    networks:
      - net-app
    depends_on:
      arq04-mongo-server:
        condition: service_healthy
networks:
  net-app:
    driver: bridge
    name: net-app

volumes:
  vol-app:
    name: vol-app
  vol-app-mongo:
    name: vol-app-mongo
